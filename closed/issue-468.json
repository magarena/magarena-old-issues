{
  "status": "verified",
  "body": "While testing new card scripts/mechanics, the game will 'hang' after the Start Duel is clicked. It doesn't get to any log report. (Which I was expecting).\r\n\r\nThe loading/wait icon appears, as if it's going to load the new mulligan hand screen, even if that option is turned off. You can close the window normally, however if you bring up the menu instead (via esc), and select any of the options to restart or concede, you will get a different crash. A NullPointerException, essentially trying to restart a game that hasn't started yet. Returning to the main menu still works fine.\r\n\r\nTo replicate, include a card in a decklist with a known error, which would normally be found before game-start (groovy error). Have the new Mulligan Hand option turned off in preferences.\r\n\r\nCrash Log for Menu\r\nCRASH REPORT FOR MAGARENA THREAD Thread[AWT-EventQueue-0,6,main]\r\nCREATED ON 2014/01/26 16:14:58\r\nMAGARENA VERSION 1.46, JRE 1.7.0_45, OS Windows 7_6.1 amd64\r\n\r\nTurn : 1  Phase : Mulligan  Step : Begin  Player : Player  Score : 0\r\n0] Player : Player  Life : 20  Delayed : Total=0\r\n1] Player : Computer  Life : 20  Delayed : Total=0\r\nStack : 0\r\nScore = 0\r\n\r\nException from controller.runGame: null\r\njava.lang.NullPointerException\r\n\tat magic.ui.screen.DuelGameScreen.concedeGame(DuelGameScreen.java:95)\r\n\tat magic.ui.screen.DuelGameScreen$ScreenOptions$1.actionPerformed(DuelGameScreen.java:140)\r\n\tat javax.swing.AbstractButton.fireActionPerformed(Unknown Source)\r\n\tat javax.swing.AbstractButton$Handler.actionPerformed(Unknown Source)\r\n\tat javax.swing.DefaultButtonModel.fireActionPerformed(Unknown Source)\r\n\tat javax.swing.DefaultButtonModel.setPressed(Unknown Source)\r\n\tat javax.swing.plaf.basic.BasicButtonListener.mouseReleased(Unknown Source)\r\n\tat java.awt.AWTEventMulticaster.mouseReleased(Unknown Source)\r\n\tat java.awt.Component.processMouseEvent(Unknown Source)\r\n\tat javax.swing.JComponent.processMouseEvent(Unknown Source)\r\n\tat java.awt.Component.processEvent(Unknown Source)\r\n\tat java.awt.Container.processEvent(Unknown Source)\r\n\tat java.awt.Component.dispatchEventImpl(Unknown Source)\r\n\tat java.awt.Container.dispatchEventImpl(Unknown Source)\r\n\tat java.awt.Component.dispatchEvent(Unknown Source)\r\n\tat java.awt.LightweightDispatcher.retargetMouseEvent(Unknown Source)\r\n\tat java.awt.LightweightDispatcher.processMouseEvent(Unknown Source)\r\n\tat java.awt.LightweightDispatcher.dispatchEvent(Unknown Source)\r\n\tat java.awt.Container.dispatchEventImpl(Unknown Source)\r\n\tat java.awt.Window.dispatchEventImpl(Unknown Source)\r\n\tat java.awt.Component.dispatchEvent(Unknown Source)\r\n\tat java.awt.EventQueue.dispatchEventImpl(Unknown Source)\r\n\tat java.awt.EventQueue.access$200(Unknown Source)\r\n\tat java.awt.EventQueue$3.run(Unknown Source)\r\n\tat java.awt.EventQueue$3.run(Unknown Source)\r\n\tat java.security.AccessController.doPrivileged(Native Method)\r\n\tat java.security.ProtectionDomain$1.doIntersectionPrivilege(Unknown Source)\r\n\tat java.security.ProtectionDomain$1.doIntersectionPrivilege(Unknown Source)\r\n\tat java.awt.EventQueue$4.run(Unknown Source)\r\n\tat java.awt.EventQueue$4.run(Unknown Source)\r\n\tat java.security.AccessController.doPrivileged(Native Method)\r\n\tat java.security.ProtectionDomain$1.doIntersectionPrivilege(Unknown Source)\r\n\tat java.awt.EventQueue.dispatchEvent(Unknown Source)\r\n\tat java.awt.EventDispatchThread.pumpOneEventForFilters(Unknown Source)\r\n\tat java.awt.EventDispatchThread.pumpEventsForFilter(Unknown Source)\r\n\tat java.awt.EventDispatchThread.pumpEventsForHierarchy(Unknown Source)\r\n\tat java.awt.EventDispatchThread.pumpEvents(Unknown Source)\r\n\tat java.awt.EventDispatchThread.pumpEvents(Unknown Source)\r\n\tat java.awt.EventDispatchThread.run(Unknown Source)",
  "author": "[ShawnieBoyUK](https://code.google.com/u/ShawnieBoyUK/)",
  "title": "Expect Crash, get Eternal Hang (Mulligan Hand Screen Issue)",
  "labels": [
    "imported",
    "Component-UI",
    "Priority-Medium",
    "bug"
  ],
  "comments": [
    {
      "date": "January 26, 2014 09:48:13",
      "body": ">> To replicate, include a card in a decklist with a known error,\r\nexample please.",
      "author": "[lodici123](https://code.google.com/u/lodici123/)"
    },
    {
      "date": "January 26, 2014 09:53:03",
      "body": "Groovy code for Bog_Gnarr - I deleted the comma after permanent in MagicEvent\r\n\r\n[\r\n    new MagicWhenOtherSpellIsCastTrigger() {\r\n        @Override\r\n        public MagicEvent executeTrigger(final MagicGame game,final MagicPermanent permanent,final MagicCardOnStack cardOnStack) {\r\n            return cardOnStack.hasColor(MagicColor.Black) ?\r\n                new MagicEvent(\r\n                    permanent\r\n                    this,\r\n                    \"SN gets +2/+2 until end of turn.\"\r\n                ):\r\n                MagicEvent.NONE;\r\n        }\r\n        @Override\r\n        public void executeEvent(final MagicGame game, final MagicEvent event) {\r\n            game.doAction(new MagicChangeTurnPTAction(event.getPermanent(),2,2));\r\n        }\r\n    }\r\n]",
      "author": "[ShawnieBoyUK](https://code.google.com/u/ShawnieBoyUK/)"
    },
    {
      "date": "January 26, 2014 10:26:08",
      "body": "Thanks. The wait screen is suppressing the error for some reason which I will look into. A temporary workaround that will generate an error log is to open the deck with the dodgy card in the Deck Editor and click on the Sample Hand action.\n\n**Status:** Accepted  \n  **Owner:** lodici123  \n  **Labels:** Component-UI  \n",
      "author": "[lodici123](https://code.google.com/u/lodici123/)"
    },
    {
      "date": "January 26, 2014 11:47:30",
      "body": "Excellent, thanks",
      "author": "[ShawnieBoyUK](https://code.google.com/u/ShawnieBoyUK/)"
    },
    {
      "date": "January 27, 2014 16:49:54",
      "body": "fixed applied as of http://bitbucket.org/lodici/magarena/commits/d5e7c0ac751b7b500d8c856f9e05fd780615b14f\n\n**Status:** Fixed  \n",
      "author": "[lodici123](https://code.google.com/u/lodici123/)"
    },
    {
      "date": "August 29, 2014 04:28:55",
      "body": "**Status:** Verified  \n",
      "author": "[ShawnieBoyUK](https://code.google.com/u/ShawnieBoyUK/)"
    }
  ],
  "content": "_From [ShawnieBoyUK](https://code.google.com/u/ShawnieBoyUK/) on January 27, 2014 00:16:53_\n\nWhile testing new card scripts/mechanics, the game will 'hang' after the Start Duel is clicked. It doesn't get to any log report. (Which I was expecting).\r\n\r\nThe loading/wait icon appears, as if it's going to load the new mulligan hand screen, even if that option is turned off. You can close the window normally, however if you bring up the menu instead (via esc), and select any of the options to restart or concede, you will get a different crash. A NullPointerException, essentially trying to restart a game that hasn't started yet. Returning to the main menu still works fine.\r\n\r\nTo replicate, include a card in a decklist with a known error, which would normally be found before game-start (groovy error). Have the new Mulligan Hand option turned off in preferences.\r\n\r\nCrash Log for Menu\r\nCRASH REPORT FOR MAGARENA THREAD Thread[AWT-EventQueue-0,6,main]\r\nCREATED ON 2014/01/26 16:14:58\r\nMAGARENA VERSION 1.46, JRE 1.7.0_45, OS Windows 7_6.1 amd64\r\n\r\nTurn : 1  Phase : Mulligan  Step : Begin  Player : Player  Score : 0\r\n0] Player : Player  Life : 20  Delayed : Total=0\r\n1] Player : Computer  Life : 20  Delayed : Total=0\r\nStack : 0\r\nScore = 0\r\n\r\nException from controller.runGame: null\r\njava.lang.NullPointerException\r\n\tat magic.ui.screen.DuelGameScreen.concedeGame(DuelGameScreen.java:95)\r\n\tat magic.ui.screen.DuelGameScreen$ScreenOptions$1.actionPerformed(DuelGameScreen.java:140)\r\n\tat javax.swing.AbstractButton.fireActionPerformed(Unknown Source)\r\n\tat javax.swing.AbstractButton$Handler.actionPerformed(Unknown Source)\r\n\tat javax.swing.DefaultButtonModel.fireActionPerformed(Unknown Source)\r\n\tat javax.swing.DefaultButtonModel.setPressed(Unknown Source)\r\n\tat javax.swing.plaf.basic.BasicButtonListener.mouseReleased(Unknown Source)\r\n\tat java.awt.AWTEventMulticaster.mouseReleased(Unknown Source)\r\n\tat java.awt.Component.processMouseEvent(Unknown Source)\r\n\tat javax.swing.JComponent.processMouseEvent(Unknown Source)\r\n\tat java.awt.Component.processEvent(Unknown Source)\r\n\tat java.awt.Container.processEvent(Unknown Source)\r\n\tat java.awt.Component.dispatchEventImpl(Unknown Source)\r\n\tat java.awt.Container.dispatchEventImpl(Unknown Source)\r\n\tat java.awt.Component.dispatchEvent(Unknown Source)\r\n\tat java.awt.LightweightDispatcher.retargetMouseEvent(Unknown Source)\r\n\tat java.awt.LightweightDispatcher.processMouseEvent(Unknown Source)\r\n\tat java.awt.LightweightDispatcher.dispatchEvent(Unknown Source)\r\n\tat java.awt.Container.dispatchEventImpl(Unknown Source)\r\n\tat java.awt.Window.dispatchEventImpl(Unknown Source)\r\n\tat java.awt.Component.dispatchEvent(Unknown Source)\r\n\tat java.awt.EventQueue.dispatchEventImpl(Unknown Source)\r\n\tat java.awt.EventQueue.access$200(Unknown Source)\r\n\tat java.awt.EventQueue$3.run(Unknown Source)\r\n\tat java.awt.EventQueue$3.run(Unknown Source)\r\n\tat java.security.AccessController.doPrivileged(Native Method)\r\n\tat java.security.ProtectionDomain$1.doIntersectionPrivilege(Unknown Source)\r\n\tat java.security.ProtectionDomain$1.doIntersectionPrivilege(Unknown Source)\r\n\tat java.awt.EventQueue$4.run(Unknown Source)\r\n\tat java.awt.EventQueue$4.run(Unknown Source)\r\n\tat java.security.AccessController.doPrivileged(Native Method)\r\n\tat java.security.ProtectionDomain$1.doIntersectionPrivilege(Unknown Source)\r\n\tat java.awt.EventQueue.dispatchEvent(Unknown Source)\r\n\tat java.awt.EventDispatchThread.pumpOneEventForFilters(Unknown Source)\r\n\tat java.awt.EventDispatchThread.pumpEventsForFilter(Unknown Source)\r\n\tat java.awt.EventDispatchThread.pumpEventsForHierarchy(Unknown Source)\r\n\tat java.awt.EventDispatchThread.pumpEvents(Unknown Source)\r\n\tat java.awt.EventDispatchThread.pumpEvents(Unknown Source)\r\n\tat java.awt.EventDispatchThread.run(Unknown Source)\n\n_Original issue: http://code.google.com/p/magarena/issues/detail?id=468_",
  "date": "2014-01-27T00:16:53",
  "state": "closed",
  "gid": 468,
  "link": "http://code.google.com/p/magarena/issues/detail?id=468",
  "owner": "lodici123"
}
