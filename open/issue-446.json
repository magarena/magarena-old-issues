{
  "status": "accepted",
  "body": "v. 1.44\r\nTribal mono always generate black cards.\r\n\r\nand\r\n\r\nAbility Mono always causing crash.\r\n\r\n----------log--------------\r\n\r\nCRASH REPORT FOR MAGARENA THREAD Thread[AWT-EventQueue-0,6,main]\r\nCREATED ON 2013/12/09 14:24:44\r\nMAGARENA VERSION 1.44, JRE 1.7.0_45, OS Windows XP_5.1 x86\r\n\r\nException from controller.runGame: No matching basic land for MagicColor null\r\njava.lang.RuntimeException: No matching basic land for MagicColor null\r\n\tat magic.data.CardDefinitions.getBasicLand(CardDefinitions.java:254)\r\n\tat magic.model.MagicPlayerDefinition.addBasicLandsToDeck(MagicPlayerDefinition.java:98)\r\n\tat magic.model.MagicPlayerDefinition.generateDeck(MagicPlayerDefinition.java:131)\r\n\tat magic.model.MagicDuel.buildDecks(MagicDuel.java:236)\r\n\tat magic.model.MagicDuel.initialize(MagicDuel.java:243)\r\n\tat magic.ui.MagicFrame.newDuel(MagicFrame.java:431)\r\n\tat magic.ui.DuelDialog.actionPerformed(DuelDialog.java:171)\r\n\tat javax.swing.AbstractButton.fireActionPerformed(Unknown Source)\r\n\tat javax.swing.AbstractButton$Handler.actionPerformed(Unknown Source)\r\n\tat javax.swing.DefaultButtonModel.fireActionPerformed(Unknown Source)\r\n\tat javax.swing.DefaultButtonModel.setPressed(Unknown Source)\r\n\tat javax.swing.plaf.basic.BasicButtonListener.mouseReleased(Unknown Source)\r\n\tat java.awt.Component.processMouseEvent(Unknown Source)\r\n\tat javax.swing.JComponent.processMouseEvent(Unknown Source)\r\n\tat java.awt.Component.processEvent(Unknown Source)\r\n\tat java.awt.Container.processEvent(Unknown Source)\r\n\tat java.awt.Component.dispatchEventImpl(Unknown Source)\r\n\tat java.awt.Container.dispatchEventImpl(Unknown Source)\r\n\tat java.awt.Component.dispatchEvent(Unknown Source)\r\n\tat java.awt.LightweightDispatcher.retargetMouseEvent(Unknown Source)\r\n\tat java.awt.LightweightDispatcher.processMouseEvent(Unknown Source)\r\n\tat java.awt.LightweightDispatcher.dispatchEvent(Unknown Source)\r\n\tat java.awt.Container.dispatchEventImpl(Unknown Source)\r\n\tat java.awt.Window.dispatchEventImpl(Unknown Source)\r\n\tat java.awt.Component.dispatchEvent(Unknown Source)\r\n\tat java.awt.EventQueue.dispatchEventImpl(Unknown Source)\r\n\tat java.awt.EventQueue.access$200(Unknown Source)\r\n\tat java.awt.EventQueue$3.run(Unknown Source)\r\n\tat java.awt.EventQueue$3.run(Unknown Source)\r\n\tat java.security.AccessController.doPrivileged(Native Method)\r\n\tat java.security.ProtectionDomain$1.doIntersectionPrivilege(Unknown Source)\r\n\tat java.security.ProtectionDomain$1.doIntersectionPrivilege(Unknown Source)\r\n\tat java.awt.EventQueue$4.run(Unknown Source)\r\n\tat java.awt.EventQueue$4.run(Unknown Source)\r\n\tat java.security.AccessController.doPrivileged(Native Method)\r\n\tat java.security.ProtectionDomain$1.doIntersectionPrivilege(Unknown Source)\r\n\tat java.awt.EventQueue.dispatchEvent(Unknown Source)\r\n\tat java.awt.EventDispatchThread.pumpOneEventForFilters(Unknown Source)\r\n\tat java.awt.EventDispatchThread.pumpEventsForFilter(Unknown Source)\r\n\tat java.awt.EventDispatchThread.pumpEventsForFilter(Unknown Source)\r\n\tat java.awt.WaitDispatchSupport$2.run(Unknown Source)\r\n\tat java.awt.WaitDispatchSupport$4.run(Unknown Source)\r\n\tat java.security.AccessController.doPrivileged(Native Method)\r\n\tat java.awt.WaitDispatchSupport.enter(Unknown Source)\r\n\tat java.awt.Dialog.show(Unknown Source)\r\n\tat java.awt.Component.show(Unknown Source)\r\n\tat java.awt.Component.setVisible(Unknown Source)\r\n\tat java.awt.Window.setVisible(Unknown Source)\r\n\tat java.awt.Dialog.setVisible(Unknown Source)\r\n\tat magic.ui.DuelDialog.<init>(DuelDialog.java:151)\r\n\tat magic.ui.MagicFrame.showNewDuelDialog(MagicFrame.java:426)\r\n\tat magic.ui.DuelPanel.actionPerformed(DuelPanel.java:361)\r\n\tat javax.swing.AbstractButton.fireActionPerformed(Unknown Source)\r\n\tat javax.swing.AbstractButton$Handler.actionPerformed(Unknown Source)\r\n\tat javax.swing.DefaultButtonModel.fireActionPerformed(Unknown Source)\r\n\tat javax.swing.DefaultButtonModel.setPressed(Unknown Source)\r\n\tat javax.swing.plaf.basic.BasicButtonListener.mouseReleased(Unknown Source)\r\n\tat java.awt.Component.processMouseEvent(Unknown Source)\r\n\tat javax.swing.JComponent.processMouseEvent(Unknown Source)\r\n\tat java.awt.Component.processEvent(Unknown Source)\r\n\tat java.awt.Container.processEvent(Unknown Source)\r\n\tat java.awt.Component.dispatchEventImpl(Unknown Source)\r\n\tat java.awt.Container.dispatchEventImpl(Unknown Source)\r\n\tat java.awt.Component.dispatchEvent(Unknown Source)\r\n\tat java.awt.LightweightDispatcher.retargetMouseEvent(Unknown Source)\r\n\tat java.awt.LightweightDispatcher.processMouseEvent(Unknown Source)\r\n\tat java.awt.LightweightDispatcher.dispatchEvent(Unknown Source)\r\n\tat java.awt.Container.dispatchEventImpl(Unknown Source)\r\n\tat java.awt.Window.dispatchEventImpl(Unknown Source)\r\n\tat java.awt.Component.dispatchEvent(Unknown Source)\r\n\tat java.awt.EventQueue.dispatchEventImpl(Unknown Source)\r\n\tat java.awt.EventQueue.access$200(Unknown Source)\r\n\tat java.awt.EventQueue$3.run(Unknown Source)\r\n\tat java.awt.EventQueue$3.run(Unknown Source)\r\n\tat java.security.AccessController.doPrivileged(Native Method)\r\n\tat java.security.ProtectionDomain$1.doIntersectionPrivilege(Unknown Source)\r\n\tat java.security.ProtectionDomain$1.doIntersectionPrivilege(Unknown Source)\r\n\tat java.awt.EventQueue$4.run(Unknown Source)\r\n\tat java.awt.EventQueue$4.run(Unknown Source)\r\n\tat java.security.AccessController.doPrivileged(Native Method)\r\n\tat java.security.ProtectionDomain$1.doIntersectionPrivilege(Unknown Source)\r\n\tat java.awt.EventQueue.dispatchEvent(Unknown Source)\r\n\tat java.awt.EventDispatchThread.pumpOneEventForFilters(Unknown Source)\r\n\tat java.awt.EventDispatchThread.pumpEventsForFilter(Unknown Source)\r\n\tat java.awt.EventDispatchThread.pumpEventsForHierarchy(Unknown Source)\r\n\tat java.awt.EventDispatchThread.pumpEvents(Unknown Source)\r\n\tat java.awt.EventDispatchThread.pumpEvents(Unknown Source)\r\n\tat java.awt.EventDispatchThread.run(Unknown Source)",
  "author": "[OLEGtheK...@gmail.com](https://code.google.com/u/106579007142717194127/)",
  "title": "Deck generation",
  "labels": [
    "imported",
    "Priority-Low",
    "bug"
  ],
  "comments": [
    {
      "date": "December 09, 2013 06:31:02",
      "body": "confirm Ability Mono crash. not certain what the objective of Tribal Mono is yet.\n\n**Status:** Accepted  \n",
      "author": "[lodici123](https://code.google.com/u/lodici123/)"
    },
    {
      "date": "December 10, 2013 07:15:58",
      "body": "**Status:** Started  \n",
      "author": "[lodici123](https://code.google.com/u/lodici123/)"
    },
    {
      "date": "December 10, 2013 12:34:37",
      "body": "> Tribal mono always generate black cards. \r\nconfirmed.Only randomizes once each time Magarena starts. So one session you may only get black cards but the next time you restart you might only get red cards.",
      "author": "[lodici123](https://code.google.com/u/lodici123/)"
    },
    {
      "date": "December 11, 2013 05:39:31",
      "body": "I have temporarily disabled Ability Mono deck generator while I try to come up with a fix. This temporary fix is available in build 1.44.617 ( https://buildhive.cloudbees.com/job/melvinzhang/job/magarena/617/ ).",
      "author": "[lodici123](https://code.google.com/u/lodici123/)"
    },
    {
      "date": "January 16, 2014 01:13:31",
      "body": "All generated decks' colors randomizes only at client start.",
      "author": "[OLEGtheK...@gmail.com](https://code.google.com/u/106579007142717194127/)"
    },
    {
      "date": "March 13, 2014 11:25:52",
      "body": "\"Ability Mono\" generates an initial deck of colorless cards so there is no \"best color\" for choosing basic lands. In this case I have updated the code so the best color is chosen randomly from one of the five colors ( http://bitbucket.org/lodici/magarena/commits/45d6650ad8db70aed06e7d0df0dcb7615da28ad1 ).\n\n**Status:** Fixed  \n",
      "author": "[lodici123](https://code.google.com/u/lodici123/)"
    },
    {
      "date": "August 29, 2014 04:28:55",
      "body": "**Status:** Verified  \n",
      "author": "[ShawnieBoyUK](https://code.google.com/u/ShawnieBoyUK/)"
    },
    {
      "date": "September 13, 2014 21:35:12",
      "body": "Issue 691 has been merged into this issue.",
      "author": "[ShawnieBoyUK](https://code.google.com/u/ShawnieBoyUK/)"
    },
    {
      "date": "September 13, 2014 21:36:10",
      "body": "Black only deck generation still occuring\n\n**Status:** Accepted  \n",
      "author": "[ShawnieBoyUK](https://code.google.com/u/ShawnieBoyUK/)"
    },
    {
      "date": "September 13, 2014 21:49:17",
      "body": "Not strictly correct - originally it was only generating black decks but the update as described in comment #6 means that the color is randomized *each* time you start Magarena. However, whatever color it selects stays at that color for the rest of the session until you restart Magarena again.\n\n**Labels:** -Priority-Medium Priority-Low  \n",
      "author": "[lodici123](https://code.google.com/u/lodici123/)"
    },
    {
      "date": "September 13, 2014 21:54:29",
      "body": "Must have been having a 'lucky' streak...\r\n\r\nLikely that the 'New Duel' is just remembering too much, switching from Ability Mono to Tribal Mono seems to reset the 'random' - akin to starting a new duel with the same deck",
      "author": "[ShawnieBoyUK](https://code.google.com/u/ShawnieBoyUK/)"
    }
  ],
  "content": "_From [OLEGtheK...@gmail.com](https://code.google.com/u/106579007142717194127/) on December 09, 2013 18:25:40_\n\nv. 1.44\r\nTribal mono always generate black cards.\r\n\r\nand\r\n\r\nAbility Mono always causing crash.\r\n\r\n----------log--------------\r\n\r\nCRASH REPORT FOR MAGARENA THREAD Thread[AWT-EventQueue-0,6,main]\r\nCREATED ON 2013/12/09 14:24:44\r\nMAGARENA VERSION 1.44, JRE 1.7.0_45, OS Windows XP_5.1 x86\r\n\r\nException from controller.runGame: No matching basic land for MagicColor null\r\njava.lang.RuntimeException: No matching basic land for MagicColor null\r\n\tat magic.data.CardDefinitions.getBasicLand(CardDefinitions.java:254)\r\n\tat magic.model.MagicPlayerDefinition.addBasicLandsToDeck(MagicPlayerDefinition.java:98)\r\n\tat magic.model.MagicPlayerDefinition.generateDeck(MagicPlayerDefinition.java:131)\r\n\tat magic.model.MagicDuel.buildDecks(MagicDuel.java:236)\r\n\tat magic.model.MagicDuel.initialize(MagicDuel.java:243)\r\n\tat magic.ui.MagicFrame.newDuel(MagicFrame.java:431)\r\n\tat magic.ui.DuelDialog.actionPerformed(DuelDialog.java:171)\r\n\tat javax.swing.AbstractButton.fireActionPerformed(Unknown Source)\r\n\tat javax.swing.AbstractButton$Handler.actionPerformed(Unknown Source)\r\n\tat javax.swing.DefaultButtonModel.fireActionPerformed(Unknown Source)\r\n\tat javax.swing.DefaultButtonModel.setPressed(Unknown Source)\r\n\tat javax.swing.plaf.basic.BasicButtonListener.mouseReleased(Unknown Source)\r\n\tat java.awt.Component.processMouseEvent(Unknown Source)\r\n\tat javax.swing.JComponent.processMouseEvent(Unknown Source)\r\n\tat java.awt.Component.processEvent(Unknown Source)\r\n\tat java.awt.Container.processEvent(Unknown Source)\r\n\tat java.awt.Component.dispatchEventImpl(Unknown Source)\r\n\tat java.awt.Container.dispatchEventImpl(Unknown Source)\r\n\tat java.awt.Component.dispatchEvent(Unknown Source)\r\n\tat java.awt.LightweightDispatcher.retargetMouseEvent(Unknown Source)\r\n\tat java.awt.LightweightDispatcher.processMouseEvent(Unknown Source)\r\n\tat java.awt.LightweightDispatcher.dispatchEvent(Unknown Source)\r\n\tat java.awt.Container.dispatchEventImpl(Unknown Source)\r\n\tat java.awt.Window.dispatchEventImpl(Unknown Source)\r\n\tat java.awt.Component.dispatchEvent(Unknown Source)\r\n\tat java.awt.EventQueue.dispatchEventImpl(Unknown Source)\r\n\tat java.awt.EventQueue.access$200(Unknown Source)\r\n\tat java.awt.EventQueue$3.run(Unknown Source)\r\n\tat java.awt.EventQueue$3.run(Unknown Source)\r\n\tat java.security.AccessController.doPrivileged(Native Method)\r\n\tat java.security.ProtectionDomain$1.doIntersectionPrivilege(Unknown Source)\r\n\tat java.security.ProtectionDomain$1.doIntersectionPrivilege(Unknown Source)\r\n\tat java.awt.EventQueue$4.run(Unknown Source)\r\n\tat java.awt.EventQueue$4.run(Unknown Source)\r\n\tat java.security.AccessController.doPrivileged(Native Method)\r\n\tat java.security.ProtectionDomain$1.doIntersectionPrivilege(Unknown Source)\r\n\tat java.awt.EventQueue.dispatchEvent(Unknown Source)\r\n\tat java.awt.EventDispatchThread.pumpOneEventForFilters(Unknown Source)\r\n\tat java.awt.EventDispatchThread.pumpEventsForFilter(Unknown Source)\r\n\tat java.awt.EventDispatchThread.pumpEventsForFilter(Unknown Source)\r\n\tat java.awt.WaitDispatchSupport$2.run(Unknown Source)\r\n\tat java.awt.WaitDispatchSupport$4.run(Unknown Source)\r\n\tat java.security.AccessController.doPrivileged(Native Method)\r\n\tat java.awt.WaitDispatchSupport.enter(Unknown Source)\r\n\tat java.awt.Dialog.show(Unknown Source)\r\n\tat java.awt.Component.show(Unknown Source)\r\n\tat java.awt.Component.setVisible(Unknown Source)\r\n\tat java.awt.Window.setVisible(Unknown Source)\r\n\tat java.awt.Dialog.setVisible(Unknown Source)\r\n\tat magic.ui.DuelDialog.<init>(DuelDialog.java:151)\r\n\tat magic.ui.MagicFrame.showNewDuelDialog(MagicFrame.java:426)\r\n\tat magic.ui.DuelPanel.actionPerformed(DuelPanel.java:361)\r\n\tat javax.swing.AbstractButton.fireActionPerformed(Unknown Source)\r\n\tat javax.swing.AbstractButton$Handler.actionPerformed(Unknown Source)\r\n\tat javax.swing.DefaultButtonModel.fireActionPerformed(Unknown Source)\r\n\tat javax.swing.DefaultButtonModel.setPressed(Unknown Source)\r\n\tat javax.swing.plaf.basic.BasicButtonListener.mouseReleased(Unknown Source)\r\n\tat java.awt.Component.processMouseEvent(Unknown Source)\r\n\tat javax.swing.JComponent.processMouseEvent(Unknown Source)\r\n\tat java.awt.Component.processEvent(Unknown Source)\r\n\tat java.awt.Container.processEvent(Unknown Source)\r\n\tat java.awt.Component.dispatchEventImpl(Unknown Source)\r\n\tat java.awt.Container.dispatchEventImpl(Unknown Source)\r\n\tat java.awt.Component.dispatchEvent(Unknown Source)\r\n\tat java.awt.LightweightDispatcher.retargetMouseEvent(Unknown Source)\r\n\tat java.awt.LightweightDispatcher.processMouseEvent(Unknown Source)\r\n\tat java.awt.LightweightDispatcher.dispatchEvent(Unknown Source)\r\n\tat java.awt.Container.dispatchEventImpl(Unknown Source)\r\n\tat java.awt.Window.dispatchEventImpl(Unknown Source)\r\n\tat java.awt.Component.dispatchEvent(Unknown Source)\r\n\tat java.awt.EventQueue.dispatchEventImpl(Unknown Source)\r\n\tat java.awt.EventQueue.access$200(Unknown Source)\r\n\tat java.awt.EventQueue$3.run(Unknown Source)\r\n\tat java.awt.EventQueue$3.run(Unknown Source)\r\n\tat java.security.AccessController.doPrivileged(Native Method)\r\n\tat java.security.ProtectionDomain$1.doIntersectionPrivilege(Unknown Source)\r\n\tat java.security.ProtectionDomain$1.doIntersectionPrivilege(Unknown Source)\r\n\tat java.awt.EventQueue$4.run(Unknown Source)\r\n\tat java.awt.EventQueue$4.run(Unknown Source)\r\n\tat java.security.AccessController.doPrivileged(Native Method)\r\n\tat java.security.ProtectionDomain$1.doIntersectionPrivilege(Unknown Source)\r\n\tat java.awt.EventQueue.dispatchEvent(Unknown Source)\r\n\tat java.awt.EventDispatchThread.pumpOneEventForFilters(Unknown Source)\r\n\tat java.awt.EventDispatchThread.pumpEventsForFilter(Unknown Source)\r\n\tat java.awt.EventDispatchThread.pumpEventsForHierarchy(Unknown Source)\r\n\tat java.awt.EventDispatchThread.pumpEvents(Unknown Source)\r\n\tat java.awt.EventDispatchThread.pumpEvents(Unknown Source)\r\n\tat java.awt.EventDispatchThread.run(Unknown Source)\n\n_Original issue: http://code.google.com/p/magarena/issues/detail?id=446_",
  "date": "2013-12-09T18:25:40",
  "state": "open",
  "gid": 446,
  "link": "http://code.google.com/p/magarena/issues/detail?id=446",
  "owner": ""
}
